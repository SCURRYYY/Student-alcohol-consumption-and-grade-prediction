ggtitle('Lognormal Distribution for Normalizing data')
library(gridExtra)
grid.arrange(p1,p2 , ncol=2)
library(ggplot2)
data('diamonds')
library(GGally)#scatterplot matrices
library(memisc)#to summarise the regression
library(scales)#for writing things
library(MASS)
library(car)
source('~/RStudio/explored datasets/daimonds.R', echo=TRUE)
ggplot(aes(x = carat ,  y = price,color = cut), data =na.omit(diamonds)) +
geom_point(alpha= 1/4) +
geom_smooth(method = 'glm',color='red')+
scale_color_brewer(type = 'div')
cube_root<- function() trans_new('cuberoot',
transform = function(x) x^(1/3) ,
inverse = function(x) x^3)
?trans_new
ggplot(aes(x = carat ,  y = price,color = cut), data =na.omit(diamonds)) +
geom_point() +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10() , breaks=c(250,1000,5000,10000,15000)) +
scale_color_brewer(type = 'div')
ggplot(aes(x = carat ,  y = price,color = cut), data =na.omit(diamonds)) +
geom_point() +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000)) +
scale_color_brewer(type = 'div')
ggplot(aes(x = carat ,  y = price,color = cut), data =na.omit(diamonds)) +
geom_point() +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000)) +
scale_color_brewer(type = 'div')  +
geom_smooth(method = 'glm',color='red')
head(table(diamonds$carat))
head(sort(table(diamonds$carat),decreasing = T))
head(sort(table(diamonds$carat),decreasing = F))
head(sort(table(diamonds$price),decreasing = F))
head(sort(table(diamonds$price),decreasing = T))
head(sort(count(diamonds$price),decreasing = T))
library(tidyr)
head(sort(count(diamonds$price),decreasing = T))
head(sort(count(diamonds$price),decreasing = T))
?count
library(dplyr)
head(sort(count(diamonds$price),decreasing = T))
ggplot(aes(x = carat ,  y = price,color = cut), data =na.omit(diamonds)) +
geom_point(alpha=1/2 , size = 3/4 , position = 'jitter') +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000)) +
scale_color_brewer(type = 'div')
ggplot(aes(x = carat ,  y = price,color = cut), data =na.omit(diamonds)) +
geom_point(alpha=1/2 , size = 3/4 , position = 'jitter') +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000))
ggplot(aes(x = carat ,  y = price), data =na.omit(diamonds)) +
geom_point(alpha=1/2 , size = 3/4 , position = 'jitter') +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000))
ggplot(aes(x = carat ,  y = price), data =na.omit(diamonds)) +
geom_point(alpha=1/5 , size = 3/4 , position = 'jitter') +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000))
library(RColorBrewer)
ggplot(aes(x = carat ,  y = price,color=clarity), data =na.omit(diamonds)) +
geom_point(alpha=1/5 , size = 3/4 , position = 'jitter') +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000)) +
scale_color_brewer(type = 'div',guide = guide_legend(title = 'Clarity'), reverse=T)
ggplot(aes(x = carat ,  y = price,color=clarity), data =na.omit(diamonds)) +
geom_point(alpha=1/5 , size = 3/4 , position = 'jitter') +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000)) +
scale_color_brewer(type = 'div',guide = guide_legend(title = 'Clarity', reverse=T))
ggplot(aes(x = carat ,  y = price,color=clarity), data =na.omit(diamonds)) +
geom_point(alpha=1/2 , size = 2 , position = 'jitter') +
#x-axes transformed to cuberoot-volume
scale_x_continuous(trans = cube_root(), limits = c(0.2,3) , breaks = c(0.2,0.5,1,2,3)) +
#transforming y i.e price lognormally-due to wide range of value-spread
scale_y_continuous(limits = c(350,15000 ) , trans=log10_trans() , breaks=c(250,1000,5000,10000,15000)) +
scale_color_brewer(type = 'div',guide = guide_legend(title = 'Clarity', reverse=T))
summary(diamonds$clarity)
install.packages('twitteR')
library(twitteR)
demoney<-searchTwitter('#demoneytization', n =100)
api_key <- "Uljbn9QiCceg6AWbJ5LckZYoB"
api_secret <- "	Ql3tkU5bIGTjxC1fZbT2OCuKl21EBbOkMFv0BSeF1KnaEzyKGL"
access_token <- "830571150036103168-5dPNc0uaXLD12QJba5DtX4rMEBcISB5"
access_token_secret <- "	lIABRUsfELuuSbPTlo7rZ2gI5vADHDqXVi3JfYtMILoGJ"
demoney<-searchTwitter('#demoneytization', n =100)
searchTwitter("iphone")
library(twitteR)
install_github("twitteR", username="geoffjentry")
library(twitteR)
api_key <- "Uljbn9QiCceg6AWbJ5LckZYoB"
api_secret <- "	Ql3tkU5bIGTjxC1fZbT2OCuKl21EBbOkMFv0BSeF1KnaEzyKGL"
access_token <- "830571150036103168-5dPNc0uaXLD12QJba5DtX4rMEBcISB5"
access_token_secret <- "	lIABRUsfELuuSbPTlo7rZ2gI5vADHDqXVi3JfYtMILoGJ"
demoney<-searchTwitter('#demoneytization', n =100)
api_key <- "	hvaamlxy730zlRDXqLnkYa2N5"
api_secret <- "Wi5zYV7txtro3lhm4M1k3xxgGMV86NwADjKlgWbQgod7IBRSfI"
access_token <- "830571150036103168-5dPNc0uaXLD12QJba5DtX4rMEBcISB5"
access_token_secret <- "lIABRUsfELuuSbPTlo7rZ2gI5vADHDqXVi3JfYtMILoGJ"
demoney<-searchTwitter('#demoneytization', n =100)
demoney<-searchTwitter('#demoneytization', n =100,api_key)
?searchTwitter()
getTwitterOAuth(api_key, api_secret)
registerTwitterOAuth(oauth)
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
demoney<-searchTwitter('#demoneytization', n =100)
setup_twitter_oauth(api_key, api_secret, access_token=access_token, access_secret=access_token_secret)
setup_twitter_oauth(api_key=api_key, api_secret=api_secret, access_token=access_token, access_secret=access_token_secret)
api_key <- "	hvaamlxy730zlRDXqLnkYa2N5"
api_secret <- "Wi5zYV7txtro3lhm4M1k3xxgGMV86NwADjKlgWbQgod7IBRSfI"
access_token <- "830571150036103168-5dPNc0uaXLD12QJba5DtX4rMEBcISB5"
access_token_secret <- "lIABRUsfELuuSbPTlo7rZ2gI5vADHDqXVi3JfYtMILoGJ"
setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)
setup_twitter_oauth("hvaamlxy730zlRDXqLnkYa2N5", "Wi5zYV7txtro3lhm4M1k3xxgGMV86NwADjKlgWbQgod7IBRSfI", "830571150036103168-5dPNc0uaXLD12QJba5DtX4rMEBcISB5", "lIABRUsfELuuSbPTlo7rZ2gI5vADHDqXVi3JfYtMILoGJ")
api_key <- "hvaamlxy730zlRDXqLnkYa2N5"
api_secret <- "Wi5zYV7txtro3lhm4M1k3xxgGMV86NwADjKlgWbQgod7IBRSfI"
access_token <- "	830571150036103168-R1Ly6IGNcbb9WQ3cWQSxxcWn01e6DXX"
access_token_secret <- "gYTOmsRO6GGNJV5NQWc0SZ1xrEty3wIaOOV5I6OdZxobM"
setup_twitter_oauth(api_key,api_secret)
demoney<-searchTwitter('#demoneytization', n =100)
demoney
length(demoney)
demoney<-searchTwitter('@demoneytisation', n =100)
demoney<-searchTwitter('@delta', n =100)
length(demoney)
airline<-searchTwitter('@jetairways', n =100)
length(airline)
rm(demoney)
airline[[1]]
airline[[2]]
airline[[3]]
airline[[5:20]]
airline[[5]]
airline[[5]]$getScreenName()
airline[[20]]$getScreenName()
airline[[20]]
airline[[100]]$getScreenName()
airline[[100]]
airline.text<-laply(airline , function(t) t$getText() )
airline.text<-lapply(airline , function(t) t$getText() )
airline.text[2]
airline.text<-as.data.frame(airline.text)
View(airline.text)
airline.text<-as.dataframe(airline.text)
rm(airline.text)
airline.text<-lapply(airline , function(t) t$getText() )
airline_tweets<-data.fame(Tweets=airline_text)
airline_tweets<-data.frame(Tweets=airline_text)
airline_tweets<-data.frame(Tweets=airline.text)
View(airline_tweets)
rm(airline_tweets)
?score.sentiment
stu<-read.csv('student-mat.csv')
gtewd()
getwd()
setwd('F:\PROJECTS\EDA-PROJECT')
setwd('F:/PROJECTS/EDA-PROJECT')
stu<-read.csv('student-mat.csv')
library(ggplot2)
library(dplyr)
library(tidyr)
ggplot(aes(x = Mjob),data = stu) +
geom_bar(aes(fill=famsup))
table(stu$famsup,stu$Fjob)
ggplot(aes(x = Fjob),data = stu) +
geom_bar(aes(fill=famsup))
prop.table(stu$traveltime,stu$address)
by(stu$absences,stu$traveltime,summary)
ggplot(aes(x = teraveltime, y = absences ) , data = stu) +
geom_col()
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col()
typeof(stu$traveltime)
stu$traveltime<-stu  %>%  as.factor(traveltime,labels=c('less than 15min',"15 to 30 min","30min to 1 hr",">1hr"))
stu$traveltime<-stu  %>%  as.factor(traveltime,labels=c("less than 15min","15 to 30 min","30min to 1 hr",">1hr"))
stu$traveltime<-stu  %>%  factor(traveltime,labels=c("less than 15min","15 to 30 min","30min to 1 hr",">1hr"))
stu$traveltime<- stu  %>%  factor(traveltime,labels=c("less than 15min","15 to 30 min","30min to 1 hr",">1hr"))
stu$traveltime<- stu  %>%  factor(traveltime,levels=c("less than 15min","15 to 30 min","30min to 1 hr",">1hr"))
stu$traveltime<- stu$traveltime  %>%  factor(labels=c("less than 15min","15 to 30 min","30min to 1 hr",">1hr"))
typeof(stu$traveltime)
class(stu$traveltime)
levels(stu$traveltime)
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col()
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(color=school))
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill=school))
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill=school)) +
coord_trans(y = 'sqrt')
by(stu$absences,stu$traveltime,summary)
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill=school)) +
coord_trans(y = 'gender')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill=gender)) +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill='gender')) +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill=gender)) +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill=sex)) +
coord_trans(y = 'sqrt')
stu %>% chisq.test(traveltime,absences)
chisq.test(stu$traveltime,stu$absences)
summary(stu$absences)
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col(aes(fill=sex)) +
coord_cartesian(ylim=c(0,75))
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col() +
coord_cartesian(ylim=c(0,100))
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col() +
coord_trans(y = 'sqrt') +
ylim(0,100)
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_col() +
coord_trans(y = 'sqrt') +
ylim(0,200)
by(stu$absences,stu$traveltime,summary)
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot()
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
coord_cartesian(ylim=c(0,75))
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
coord_cartesian(ylim=c(0,75)) +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
coord_cartesian(ylim=c(0,75)) +
scale_y_continuous(breaks=c(0,75,5))
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
coord_cartesian(ylim=c(0,75)) +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
#coord_cartesian to preserve the data points and do not remove them due to limitting
coord_cartesian(ylim=c(0,20),breaks=seq(0,20,60)) +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
#coord_cartesian to preserve the data points and do not remove them due to limitting
coord_cartesian(ylim=c(0,20)) +
scale_y_continuous(breaks=seq(0,20,4)) +
coord_trans(y = 'sqrt')
ggplot(aes(x = traveltime, y = absences ) , data = stu) +
geom_boxplot() +
#coord_cartesian to preserve the data points and do not remove them due to limitting
coord_cartesian(ylim=c(0,20)) +
#scalling the y coordinates
scale_y_continuous(breaks=seq(0,20,4))
quantile(stu$absences , c(0.9))
count(stu$absences > 14)
?count
count(stu$absences )
source('F:/PROJECTS/EDA-PROJECT/student.R', echo=TRUE)
library(dplyr)
stu >%>count(absences)
count(stu$absences > 14 )
stu1<-group_by(stu$absences)
filter(stu , absences > 14)
stu >%> filter(absences > 20)
stu %>% filter(absences > 20)
stu %>% filter(absences > 50)
stu %>% filter(absences >= 14)
stu %>%select(age,sex , Mjob , Fjob) %>% filter(absences >= 14)
stu %>%select(age,sex , Mjob , Fjob , absences) %>% filter(absences >= 14)
quantile(stu$absences , c(0.95))
quantile(stu$absences , c(0.99))
quantile(stu$absences , c(0.50))
install.packages('C50')
library(C50)
data(iris)
set.seed(9850)
g<-runif(nrow(stu))
stur<-stu[order(g) , ]
View(stur)
?C5.0
train<-stur[sample(nrow(stu),250),]
View(train)
m1<- C5.0(Walc ~ ., data = train)
class(stu$Walc)
m1<- C5.0(as.factor(Walc) ~ ., data = train)
m1
summary(m1)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
G1+
Mjob+
activities+
health+
studytime+
freetime+
age+
famsize+
internet+
Fjob+traveltime, data = train)
m1
summary(m1)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
health+
studytime+
freetime+
age+
famsize+
internet+
Fjob+traveltime, data = train)
m1
summary(m1)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
health+
studytime+
freetime+
famsize+
internet+
Fjob+traveltime, data = train)
m1
summary(m1)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
health+
studytime+
freetime+
famsize+
internet+
Fjob, data = train)
m1
summary(m1)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime+
freetime+
famsize+
internet+
, data = train)
m1
summary(m1)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime+
freetime+
famsize+
internet+
, data = train)
m1
summary(m1)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime+
freetime+
famsize+
internet
, data = train)
m1
summary(m1)
m2<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime+
freetime+
famsize
, data = train)
m2<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime+
freetime+
famsize
, data = train)
m2
summary(m2
m2
summary(m2)
m2
m2<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime
, data = train)
m2
summary(m2)
m2<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
Pstatus +
, data = train)
m2
summary(m2)
m2<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
Pstatus
, data = train)
m2
summary(m2)
m2<- C5.0(as.factor(Walc) ~ 	Dalc + goout  , data = train)
m2
summary(m2)
source('F:/PROJECTS/EDA-PROJECT/student.R', echo=TRUE)
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime+
freetime+
famsize+
internet
, data = train)
m1
summary(m1)
install.packages("C50")
m1<- C5.0(as.factor(Walc) ~ 	Dalc +
goout +
failures +
Pstatus +
higher +
Mjob+
activities+
studytime+
freetime+
famsize+
internet
, data = train)
m1
summary(m1)
plot(m1)
plot(m2)
summary(m2)
